{"ast":null,"code":"import { pushUnique } from '../../lib/utils.js';\nimport { parseHTML, replaceChildNodes } from '../../lib/dom.js';\n\n// Base class of the view classes\nexport default class View {\n  constructor(picker, config) {\n    Object.assign(this, config, {\n      picker,\n      element: parseHTML(`<div class=\"datepicker-view flex\"></div>`).firstChild,\n      selected: []\n    });\n    this.init(this.picker.datepicker.config);\n  }\n  init(options) {\n    if (options.pickLevel !== undefined) {\n      this.isMinView = this.id === options.pickLevel;\n    }\n    this.setOptions(options);\n    this.updateFocus();\n    this.updateSelection();\n  }\n\n  // Execute beforeShow() callback and apply the result to the element\n  // args:\n  // - current - current value on the iteration on view rendering\n  // - timeValue - time value of the date to pass to beforeShow()\n  performBeforeHook(el, current, timeValue) {\n    let result = this.beforeShow(new Date(timeValue));\n    switch (typeof result) {\n      case 'boolean':\n        result = {\n          enabled: result\n        };\n        break;\n      case 'string':\n        result = {\n          classes: result\n        };\n    }\n    if (result) {\n      if (result.enabled === false) {\n        el.classList.add('disabled');\n        pushUnique(this.disabled, current);\n      }\n      if (result.classes) {\n        const extraClasses = result.classes.split(/\\s+/);\n        el.classList.add(...extraClasses);\n        if (extraClasses.includes('disabled')) {\n          pushUnique(this.disabled, current);\n        }\n      }\n      if (result.content) {\n        replaceChildNodes(el, result.content);\n      }\n    }\n  }\n}","map":{"version":3,"names":["pushUnique","parseHTML","replaceChildNodes","View","constructor","picker","config","Object","assign","element","firstChild","selected","init","datepicker","options","pickLevel","undefined","isMinView","id","setOptions","updateFocus","updateSelection","performBeforeHook","el","current","timeValue","result","beforeShow","Date","enabled","classes","classList","add","disabled","extraClasses","split","includes","content"],"sources":["F:/anniecabspathandpart/client/node_modules/flowbite-datepicker/js/picker/views/View.js"],"sourcesContent":["import {pushUnique} from '../../lib/utils.js';\nimport {parseHTML, replaceChildNodes} from '../../lib/dom.js';\n\n// Base class of the view classes\nexport default class View {\n  constructor(picker, config) {\n    Object.assign(this, config, {\n      picker,\n      element: parseHTML(`<div class=\"datepicker-view flex\"></div>`).firstChild,\n      selected: [],\n    });\n    this.init(this.picker.datepicker.config);\n  }\n\n  init(options) {\n    if (options.pickLevel !== undefined) {\n      this.isMinView = this.id === options.pickLevel;\n    }\n    this.setOptions(options);\n    this.updateFocus();\n    this.updateSelection();\n  }\n\n  // Execute beforeShow() callback and apply the result to the element\n  // args:\n  // - current - current value on the iteration on view rendering\n  // - timeValue - time value of the date to pass to beforeShow()\n  performBeforeHook(el, current, timeValue) {\n    let result = this.beforeShow(new Date(timeValue));\n    switch (typeof result) {\n      case 'boolean':\n        result = {enabled: result};\n        break;\n      case 'string':\n        result = {classes: result};\n    }\n\n    if (result) {\n      if (result.enabled === false) {\n        el.classList.add('disabled');\n        pushUnique(this.disabled, current);\n      }\n      if (result.classes) {\n        const extraClasses = result.classes.split(/\\s+/);\n        el.classList.add(...extraClasses);\n        if (extraClasses.includes('disabled')) {\n          pushUnique(this.disabled, current);\n        }\n      }\n      if (result.content) {\n        replaceChildNodes(el, result.content);\n      }\n    }\n  }\n}\n"],"mappings":"AAAA,SAAQA,UAAU,QAAO,oBAAoB;AAC7C,SAAQC,SAAS,EAAEC,iBAAiB,QAAO,kBAAkB;;AAE7D;AACA,eAAe,MAAMC,IAAI,CAAC;EACxBC,WAAWA,CAACC,MAAM,EAAEC,MAAM,EAAE;IAC1BC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEF,MAAM,EAAE;MAC1BD,MAAM;MACNI,OAAO,EAAER,SAAS,CAAE,0CAAyC,CAAC,CAACS,UAAU;MACzEC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,IAAI,CAACC,IAAI,CAAC,IAAI,CAACP,MAAM,CAACQ,UAAU,CAACP,MAAM,CAAC;EAC1C;EAEAM,IAAIA,CAACE,OAAO,EAAE;IACZ,IAAIA,OAAO,CAACC,SAAS,KAAKC,SAAS,EAAE;MACnC,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACC,SAAS;IAChD;IACA,IAAI,CAACI,UAAU,CAACL,OAAO,CAAC;IACxB,IAAI,CAACM,WAAW,CAAC,CAAC;IAClB,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB;;EAEA;EACA;EACA;EACA;EACAC,iBAAiBA,CAACC,EAAE,EAAEC,OAAO,EAAEC,SAAS,EAAE;IACxC,IAAIC,MAAM,GAAG,IAAI,CAACC,UAAU,CAAC,IAAIC,IAAI,CAACH,SAAS,CAAC,CAAC;IACjD,QAAQ,OAAOC,MAAM;MACnB,KAAK,SAAS;QACZA,MAAM,GAAG;UAACG,OAAO,EAAEH;QAAM,CAAC;QAC1B;MACF,KAAK,QAAQ;QACXA,MAAM,GAAG;UAACI,OAAO,EAAEJ;QAAM,CAAC;IAC9B;IAEA,IAAIA,MAAM,EAAE;MACV,IAAIA,MAAM,CAACG,OAAO,KAAK,KAAK,EAAE;QAC5BN,EAAE,CAACQ,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;QAC5BhC,UAAU,CAAC,IAAI,CAACiC,QAAQ,EAAET,OAAO,CAAC;MACpC;MACA,IAAIE,MAAM,CAACI,OAAO,EAAE;QAClB,MAAMI,YAAY,GAAGR,MAAM,CAACI,OAAO,CAACK,KAAK,CAAC,KAAK,CAAC;QAChDZ,EAAE,CAACQ,SAAS,CAACC,GAAG,CAAC,GAAGE,YAAY,CAAC;QACjC,IAAIA,YAAY,CAACE,QAAQ,CAAC,UAAU,CAAC,EAAE;UACrCpC,UAAU,CAAC,IAAI,CAACiC,QAAQ,EAAET,OAAO,CAAC;QACpC;MACF;MACA,IAAIE,MAAM,CAACW,OAAO,EAAE;QAClBnC,iBAAiB,CAACqB,EAAE,EAAEG,MAAM,CAACW,OAAO,CAAC;MACvC;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}