{"ast":null,"code":"import { today, addMonths, addYears } from '../lib/date.js';\nimport { findElementInEventPath } from '../lib/event.js';\nimport { goToPrevOrNext, switchView } from './functions.js';\nfunction goToSelectedMonthOrYear(datepicker, selection) {\n  const picker = datepicker.picker;\n  const viewDate = new Date(picker.viewDate);\n  const viewId = picker.currentView.id;\n  const newDate = viewId === 1 ? addMonths(viewDate, selection - viewDate.getMonth()) : addYears(viewDate, selection - viewDate.getFullYear());\n  picker.changeFocus(newDate).changeView(viewId - 1).render();\n}\nexport function onClickTodayBtn(datepicker) {\n  const picker = datepicker.picker;\n  const currentDate = today();\n  if (datepicker.config.todayBtnMode === 1) {\n    if (datepicker.config.autohide) {\n      datepicker.setDate(currentDate);\n      return;\n    }\n    datepicker.setDate(currentDate, {\n      render: false\n    });\n    picker.update();\n  }\n  if (picker.viewDate !== currentDate) {\n    picker.changeFocus(currentDate);\n  }\n  picker.changeView(0).render();\n}\nexport function onClickClearBtn(datepicker) {\n  datepicker.setDate({\n    clear: true\n  });\n}\nexport function onClickViewSwitch(datepicker) {\n  switchView(datepicker);\n}\nexport function onClickPrevBtn(datepicker) {\n  goToPrevOrNext(datepicker, -1);\n}\nexport function onClickNextBtn(datepicker) {\n  goToPrevOrNext(datepicker, 1);\n}\n\n// For the picker's main block to delegete the events from `datepicker-cell`s\nexport function onClickView(datepicker, ev) {\n  const target = findElementInEventPath(ev, '.datepicker-cell');\n  if (!target || target.classList.contains('disabled')) {\n    return;\n  }\n  const {\n    id,\n    isMinView\n  } = datepicker.picker.currentView;\n  if (isMinView) {\n    datepicker.setDate(Number(target.dataset.date));\n  } else if (id === 1) {\n    goToSelectedMonthOrYear(datepicker, Number(target.dataset.month));\n  } else {\n    goToSelectedMonthOrYear(datepicker, Number(target.dataset.year));\n  }\n}\nexport function onClickPicker(datepicker) {\n  if (!datepicker.inline && !datepicker.config.disableTouchKeyboard) {\n    datepicker.inputField.focus();\n  }\n}","map":{"version":3,"names":["today","addMonths","addYears","findElementInEventPath","goToPrevOrNext","switchView","goToSelectedMonthOrYear","datepicker","selection","picker","viewDate","Date","viewId","currentView","id","newDate","getMonth","getFullYear","changeFocus","changeView","render","onClickTodayBtn","currentDate","config","todayBtnMode","autohide","setDate","update","onClickClearBtn","clear","onClickViewSwitch","onClickPrevBtn","onClickNextBtn","onClickView","ev","target","classList","contains","isMinView","Number","dataset","date","month","year","onClickPicker","inline","disableTouchKeyboard","inputField","focus"],"sources":["F:/anniecabspathandpart/client/node_modules/flowbite-datepicker/js/events/pickerListeners.js"],"sourcesContent":["import {today, addMonths, addYears} from '../lib/date.js';\nimport {findElementInEventPath} from '../lib/event.js';\nimport {goToPrevOrNext, switchView} from './functions.js';\n\nfunction goToSelectedMonthOrYear(datepicker, selection) {\n  const picker = datepicker.picker;\n  const viewDate = new Date(picker.viewDate);\n  const viewId = picker.currentView.id;\n  const newDate = viewId === 1\n    ? addMonths(viewDate, selection - viewDate.getMonth())\n    : addYears(viewDate, selection - viewDate.getFullYear());\n\n  picker.changeFocus(newDate).changeView(viewId - 1).render();\n}\n\nexport function onClickTodayBtn(datepicker) {\n  const picker = datepicker.picker;\n  const currentDate = today();\n  if (datepicker.config.todayBtnMode === 1) {\n    if (datepicker.config.autohide) {\n      datepicker.setDate(currentDate);\n      return;\n    }\n    datepicker.setDate(currentDate, {render: false});\n    picker.update();\n  }\n  if (picker.viewDate !== currentDate) {\n    picker.changeFocus(currentDate);\n  }\n  picker.changeView(0).render();\n}\n\nexport function onClickClearBtn(datepicker) {\n  datepicker.setDate({clear: true});\n}\n\nexport function onClickViewSwitch(datepicker) {\n  switchView(datepicker);\n}\n\nexport function onClickPrevBtn(datepicker) {\n  goToPrevOrNext(datepicker, -1);\n}\n\nexport function onClickNextBtn(datepicker) {\n  goToPrevOrNext(datepicker, 1);\n}\n\n// For the picker's main block to delegete the events from `datepicker-cell`s\nexport function onClickView(datepicker, ev) {\n  const target = findElementInEventPath(ev, '.datepicker-cell');\n  if (!target || target.classList.contains('disabled')) {\n    return;\n  }\n\n  const {id, isMinView} = datepicker.picker.currentView;\n  if (isMinView) {\n    datepicker.setDate(Number(target.dataset.date));\n  } else if (id === 1) {\n    goToSelectedMonthOrYear(datepicker, Number(target.dataset.month));\n  } else {\n    goToSelectedMonthOrYear(datepicker, Number(target.dataset.year));\n  }\n}\n\nexport function onClickPicker(datepicker) {\n  if (!datepicker.inline && !datepicker.config.disableTouchKeyboard) {\n    datepicker.inputField.focus();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}